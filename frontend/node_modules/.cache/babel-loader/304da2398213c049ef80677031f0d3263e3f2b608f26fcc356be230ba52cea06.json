{"ast":null,"code":"var _jsxFileName = \"/var/www/html/enfin-test/frontend/src/pages/CsvProcessor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Papa from 'papaparse';\nimport axios from '../config/axiosConfig';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CsvProcessor = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [fields, setFields] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [formData, setFormData] = useState({});\n  const [file, setFile] = useState({});\n  const [csvValues, setCsvValues] = useState({});\n  const [userId, setUserId] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    let {\n      id\n    } = jwtDecode(localStorage.getItem('authToken'));\n    setUserId(id);\n    if (options) {\n      setFields(['title', 'description', 'release_date', 'genre']);\n    }\n  }, [options]);\n  const handleFileUpload = event => {\n    setFile(event.target.files[0]);\n    const file1 = event.target.files[0];\n    if (file1) {\n      Papa.parse(file1, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => {\n          setOptions(results.meta.fields);\n          setError(null);\n          setCsvValues(results);\n        },\n        error: err => {\n          setError(err.message);\n        }\n      });\n    }\n  };\n  const handleCsvUpload = async e => {\n    e.preventDefault();\n    if (fields.length != Object.keys(formData).length) {\n      alert('Please select all fields');\n    } else {\n      try {\n        let transformedObject = [];\n        for (const i in csvValues.data) {\n          console.log(i);\n          let transformedObjectTemp = {};\n          user_id;\n          transformedObjectTemp['user_id'] = userId;\n          for (const key in csvValues.data[i]) {\n            if (formData.hasOwnProperty(key)) {\n              transformedObjectTemp[formData[key]] = csvValues.data[i][key];\n            }\n            // else {\n            //   // Handle keys not present in the first object (optional)\n            //   console.warn(`Ignoring key \"${key}\" from the second object.`);\n            // }\n          }\n          transformedObject.push({\n            transformedObjectTemp\n          });\n        }\n        let filteredData = transformedObject.map(obj => obj.transformedObjectTemp);\n\n        //console.log(filteredData);\n        const response = await axios.post('/upload_files', {\n          movies: filteredData\n        });\n        if (response.status === 200) {\n          alert('Data uploaded successfully');\n          //navigate('/movies');\n          setTimeout(() => {\n            navigate('/movies');\n          }, 2000);\n        } else {\n          alert(\"Something went wrong. Please try again later!\");\n        }\n      } catch (e) {\n        console.log(e);\n        alert('Something went wrong!');\n      }\n    }\n  };\n  const handleSelectChange = e => {\n    setFormData(pre => ({\n      ...pre,\n      [e.target.value]: e.target.name\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CSV Header Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload,\n      id: \"csvFile\",\n      name: \"csvFile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [fields.map(field => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                name: field,\n                id: field,\n                onChange: handleSelectChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Select --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 29\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary float-right ml-3\",\n                type: \"button\",\n                onClick: handleCsvUpload,\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(CsvProcessor, \"xoiK2jybYydRI6frYytjsKUXD7Y=\", false, function () {\n  return [useNavigate];\n});\n_c = CsvProcessor;\nexport default CsvProcessor;\nvar _c;\n$RefreshReg$(_c, \"CsvProcessor\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Papa","axios","jwtDecode","jsxDEV","_jsxDEV","CsvProcessor","_s","error","setError","fields","setFields","options","setOptions","formData","setFormData","file","setFile","csvValues","setCsvValues","userId","setUserId","navigate","id","localStorage","getItem","handleFileUpload","event","target","files","file1","parse","header","skipEmptyLines","complete","results","meta","err","message","handleCsvUpload","e","preventDefault","length","Object","keys","alert","transformedObject","i","data","console","log","transformedObjectTemp","user_id","key","hasOwnProperty","push","filteredData","map","obj","response","post","movies","status","setTimeout","handleSelectChange","pre","value","name","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","color","field","className","option","onClick","_c","$RefreshReg$"],"sources":["/var/www/html/enfin-test/frontend/src/pages/CsvProcessor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Papa from 'papaparse';\nimport axios from '../config/axiosConfig';\nimport { jwtDecode } from 'jwt-decode';\n\nconst CsvProcessor = () => {\n  const [error, setError] = useState(null);\n  const [fields, setFields] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [formData, setFormData] = useState({});\n  const [file, setFile] = useState({});\n  const [csvValues, setCsvValues] = useState({});\n  const [userId, setUserId] = useState('');\n\n  const navigate = useNavigate();\n\n  \n  useEffect(() => {\n    let { id } = jwtDecode(localStorage.getItem('authToken'));\n    setUserId(id);\n    if(options){\n        setFields(['title', 'description', 'release_date', 'genre']);\n    }\n  },[options]);\n  const handleFileUpload = (event) => {\n    setFile(event.target.files[0]);\n    const file1 = event.target.files[0];\n    if (file1) {\n      Papa.parse(file1, {\n        header: true,\n        skipEmptyLines: true,\n        complete: (results) => {\n          setOptions(results.meta.fields);\n          setError(null);\n          setCsvValues(results);\n        },\n        error: (err) => {\n          setError(err.message);\n        },\n      });\n    }\n  };\n\n  const handleCsvUpload = async (e) => {\n    e.preventDefault();\n    if( fields.length != Object.keys(formData).length){\n        alert('Please select all fields');\n    }\n    else{\n        try{\n            let transformedObject = [];\n            \n              for (const i in csvValues.data){\n                console.log(i);\n                let transformedObjectTemp = {};user_id;\n                transformedObjectTemp['user_id'] = userId;\n                for (const key in csvValues.data[i]) {\n                  if (formData.hasOwnProperty(key)) {\n                    transformedObjectTemp[formData[key]] = csvValues.data[i][key];\n                  }\n                  // else {\n                  //   // Handle keys not present in the first object (optional)\n                  //   console.warn(`Ignoring key \"${key}\" from the second object.`);\n                  // }\n                  \n                }\n                transformedObject.push({ transformedObjectTemp });\n              }\n              let filteredData =  transformedObject.map(obj => obj.transformedObjectTemp);\n\n              //console.log(filteredData);\n              const response = await axios.post('/upload_files', { movies : filteredData});\n            if (response.status === 200) {\n                alert('Data uploaded successfully');\n                //navigate('/movies');\n                setTimeout(() => {\n                  navigate('/movies');\n                }, 2000);\n            }\n            else{\n                alert(\"Something went wrong. Please try again later!\");\n            }\n        }catch(e){\n          console.log(e);\n          alert('Something went wrong!');\n        }\n    }\n  };\n\n\n  const handleSelectChange = (e) => {\n        setFormData((pre) => ({ ...pre, [e.target.value]: e.target.name}))\n  };\n\n  return (\n    <div>\n      <h1>CSV Header Processor</h1>\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} id=\"csvFile\" name=\"csvFile\" />\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n      {options.length > 0 && (\n        <div>\n          \n          <table>\n            <tbody>\n          {fields.map(field =>(\n            <tr>\n                <td>{field}</td>\n                <td>\n                    {/* <CsvSelect options={options}/> */}\n                    <select className=\"form-control\" name={field} id={field} onChange={handleSelectChange}>\n                        <option value=\"\">-- Select --</option>\n                        {options.map((option) => (\n                            <option value={option}>\n                                {option}\n                            </option>\n                        ))}\n                    </select>\n                </td>\n            </tr>\n          ))}\n            <tr>\n                <td></td>\n                <td><button className=\"btn btn-primary float-right ml-3\" type='button' onClick={handleCsvUpload}>Upload</button></td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CsvProcessor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,KAAK,MAAM,uBAAuB;AACzC,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMwB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAG9BD,SAAS,CAAC,MAAM;IACd,IAAI;MAAEwB;IAAG,CAAC,GAAGpB,SAAS,CAACqB,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IACzDJ,SAAS,CAACE,EAAE,CAAC;IACb,IAAGX,OAAO,EAAC;MACPD,SAAS,CAAC,CAAC,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;IAChE;EACF,CAAC,EAAC,CAACC,OAAO,CAAC,CAAC;EACZ,MAAMc,gBAAgB,GAAIC,KAAK,IAAK;IAClCV,OAAO,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAMC,KAAK,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,IAAIC,KAAK,EAAE;MACT7B,IAAI,CAAC8B,KAAK,CAACD,KAAK,EAAE;QAChBE,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE,IAAI;QACpBC,QAAQ,EAAGC,OAAO,IAAK;UACrBtB,UAAU,CAACsB,OAAO,CAACC,IAAI,CAAC1B,MAAM,CAAC;UAC/BD,QAAQ,CAAC,IAAI,CAAC;UACdU,YAAY,CAACgB,OAAO,CAAC;QACvB,CAAC;QACD3B,KAAK,EAAG6B,GAAG,IAAK;UACd5B,QAAQ,CAAC4B,GAAG,CAACC,OAAO,CAAC;QACvB;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMC,eAAe,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI/B,MAAM,CAACgC,MAAM,IAAIC,MAAM,CAACC,IAAI,CAAC9B,QAAQ,CAAC,CAAC4B,MAAM,EAAC;MAC9CG,KAAK,CAAC,0BAA0B,CAAC;IACrC,CAAC,MACG;MACA,IAAG;QACC,IAAIC,iBAAiB,GAAG,EAAE;QAExB,KAAK,MAAMC,CAAC,IAAI7B,SAAS,CAAC8B,IAAI,EAAC;UAC7BC,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;UACd,IAAII,qBAAqB,GAAG,CAAC,CAAC;UAACC,OAAO;UACtCD,qBAAqB,CAAC,SAAS,CAAC,GAAG/B,MAAM;UACzC,KAAK,MAAMiC,GAAG,IAAInC,SAAS,CAAC8B,IAAI,CAACD,CAAC,CAAC,EAAE;YACnC,IAAIjC,QAAQ,CAACwC,cAAc,CAACD,GAAG,CAAC,EAAE;cAChCF,qBAAqB,CAACrC,QAAQ,CAACuC,GAAG,CAAC,CAAC,GAAGnC,SAAS,CAAC8B,IAAI,CAACD,CAAC,CAAC,CAACM,GAAG,CAAC;YAC/D;YACA;YACA;YACA;YACA;UAEF;UACAP,iBAAiB,CAACS,IAAI,CAAC;YAAEJ;UAAsB,CAAC,CAAC;QACnD;QACA,IAAIK,YAAY,GAAIV,iBAAiB,CAACW,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACP,qBAAqB,CAAC;;QAE3E;QACA,MAAMQ,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,IAAI,CAAC,eAAe,EAAE;UAAEC,MAAM,EAAGL;QAAY,CAAC,CAAC;QAC9E,IAAIG,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UACzBjB,KAAK,CAAC,4BAA4B,CAAC;UACnC;UACAkB,UAAU,CAAC,MAAM;YACfzC,QAAQ,CAAC,SAAS,CAAC;UACrB,CAAC,EAAE,IAAI,CAAC;QACZ,CAAC,MACG;UACAuB,KAAK,CAAC,+CAA+C,CAAC;QAC1D;MACJ,CAAC,QAAML,CAAC,EAAC;QACPS,OAAO,CAACC,GAAG,CAACV,CAAC,CAAC;QACdK,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACJ;EACF,CAAC;EAGD,MAAMmB,kBAAkB,GAAIxB,CAAC,IAAK;IAC5BzB,WAAW,CAAEkD,GAAG,KAAM;MAAE,GAAGA,GAAG;MAAE,CAACzB,CAAC,CAACZ,MAAM,CAACsC,KAAK,GAAG1B,CAAC,CAACZ,MAAM,CAACuC;IAAI,CAAC,CAAC,CAAC;EACxE,CAAC;EAED,oBACE9D,OAAA;IAAA+D,QAAA,gBACE/D,OAAA;MAAA+D,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BnE,OAAA;MAAOoE,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEjD,gBAAiB;MAACH,EAAE,EAAC,SAAS;MAAC4C,IAAI,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1FhE,KAAK,iBAAIH,OAAA;MAAGuE,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAT,QAAA,GAAC,SAAO,EAAC5D,KAAK;IAAA;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvD5D,OAAO,CAAC8B,MAAM,GAAG,CAAC,iBACjBrC,OAAA;MAAA+D,QAAA,eAEE/D,OAAA;QAAA+D,QAAA,eACE/D,OAAA;UAAA+D,QAAA,GACD1D,MAAM,CAAC+C,GAAG,CAACqB,KAAK,iBACfzE,OAAA;YAAA+D,QAAA,gBACI/D,OAAA;cAAA+D,QAAA,EAAKU;YAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChBnE,OAAA;cAAA+D,QAAA,eAEI/D,OAAA;gBAAQ0E,SAAS,EAAC,cAAc;gBAACZ,IAAI,EAAEW,KAAM;gBAACvD,EAAE,EAAEuD,KAAM;gBAACH,QAAQ,EAAEX,kBAAmB;gBAAAI,QAAA,gBAClF/D,OAAA;kBAAQ6D,KAAK,EAAC,EAAE;kBAAAE,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACrC5D,OAAO,CAAC6C,GAAG,CAAEuB,MAAM,iBAChB3E,OAAA;kBAAQ6D,KAAK,EAAEc,MAAO;kBAAAZ,QAAA,EACjBY;gBAAM;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACL,CAAC,eACAnE,OAAA;YAAA+D,QAAA,gBACI/D,OAAA;cAAAgE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTnE,OAAA;cAAA+D,QAAA,eAAI/D,OAAA;gBAAQ0E,SAAS,EAAC,kCAAkC;gBAACN,IAAI,EAAC,QAAQ;gBAACQ,OAAO,EAAE1C,eAAgB;gBAAA6B,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjE,EAAA,CA7HID,YAAY;EAAA,QASCN,WAAW;AAAA;AAAAkF,EAAA,GATxB5E,YAAY;AA+HlB,eAAeA,YAAY;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}