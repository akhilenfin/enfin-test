{"ast":null,"code":"import axios from 'axios';\n\n// Create an Axios instance\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3004/',\n  // Replace with your API base URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request Interceptor\naxiosInstance.interceptors.request.use(config => {\n  // Add authorization token to headers before each request if available\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response Interceptor\naxiosInstance.interceptors.response.use(response => {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  return response;\n}, error => {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  if (error.response.status === 401) {\n    // Handle unauthorized errors (e.g., redirect to login)\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href"],"sources":["/var/www/html/enfin-test/frontend/src/config/axiosConfig.js"],"sourcesContent":["\nimport axios from 'axios';\n\n// Create an Axios instance\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3004/', // Replace with your API base URL\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request Interceptor\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Add authorization token to headers before each request if available\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response Interceptor\naxiosInstance.interceptors.response.use(\n  (response) => {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    return response;\n  },\n  (error) => {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    if (error.response.status === 401) {\n      // Handle unauthorized errors (e.g., redirect to login)\n      localStorage.removeItem('authToken');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,wBAAwB;EAAE;EACnCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAI,UAASH,KAAM,EAAC;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,aAAa,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CACpCS,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjC;IACAP,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;IACpCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}