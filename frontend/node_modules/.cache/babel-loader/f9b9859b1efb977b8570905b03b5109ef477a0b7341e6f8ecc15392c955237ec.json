{"ast":null,"code":"var _jsxFileName = \"/var/www/html/enfin-test/frontend/src/pages/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const onSubmit = async data => {\n    const formData = new FormData();\n    formData.append('csvFile', data.csvFile[0]);\n    try {\n      const response = await fetch('/bulkupload', {\n        method: 'POST',\n        body: formData\n      });\n      const uploadData = await response.json();\n      setUploadStatus(uploadData.message);\n    } catch (error) {\n      console.error('Error uploading CSV:', error);\n      setUploadStatus('Error uploading CSV. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ...register('csvFile', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), errors.csvFile && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Upload, \"SDQU/kIO2TGuxpACmU/h6CseY04=\", false, function () {\n  return [useForm];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useForm","jsxDEV","_jsxDEV","Upload","_s","register","handleSubmit","formState","errors","uploadStatus","setUploadStatus","onSubmit","data","formData","FormData","append","csvFile","response","fetch","method","body","uploadData","json","message","error","console","children","type","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/enfin-test/frontend/src/pages/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nconst Upload = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const [uploadStatus, setUploadStatus] = useState(null);\n\n    const onSubmit = async (data) => {\n        const formData = new FormData();\n        formData.append('csvFile', data.csvFile[0]);\n\n        try {\n            const response = await fetch('/bulkupload', {\n                method: 'POST',\n                body: formData,\n            });\n            const uploadData = await response.json();\n            setUploadStatus(uploadData.message);\n        } catch (error) {\n            console.error('Error uploading CSV:', error);\n            setUploadStatus('Error uploading CSV. Please try again.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input type=\"file\" {...register('csvFile', { required: true })} />\n            {errors.csvFile && <span>This field is required</span>}\n            <button type=\"submit\">Upload</button>\n            {uploadStatus && <p>{uploadStatus}</p>}\n        </form>\n    );\n};\n\nexport default Upload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGR,OAAO,CAAC,CAAC;EACnE,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMY,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;IAE3C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QACxCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP;MACV,CAAC,CAAC;MACF,MAAMQ,UAAU,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACxCZ,eAAe,CAACW,UAAU,CAACE,OAAO,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5Cd,eAAe,CAAC,wCAAwC,CAAC;IAC7D;EACJ,CAAC;EAED,oBACIR,OAAA;IAAMS,QAAQ,EAAEL,YAAY,CAACK,QAAQ,CAAE;IAAAe,QAAA,gBACnCxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAAA,GAAKtB,QAAQ,CAAC,SAAS,EAAE;QAAEuB,QAAQ,EAAE;MAAK,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACjExB,MAAM,CAACQ,OAAO,iBAAId,OAAA;MAAAwB,QAAA,EAAM;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtD9B,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpCvB,YAAY,iBAAIP,OAAA;MAAAwB,QAAA,EAAIjB;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEf,CAAC;AAAC5B,EAAA,CA7BID,MAAM;EAAA,QACkDH,OAAO;AAAA;AAAAiC,EAAA,GAD/D9B,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}