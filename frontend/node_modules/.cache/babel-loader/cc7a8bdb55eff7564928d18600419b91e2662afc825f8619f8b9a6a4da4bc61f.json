{"ast":null,"code":"var _jsxFileName = \"/var/www/html/enfin-test/frontend/src/pages/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from '../config/axiosConfig';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [file, setFile] = useState();\n  const [headers, setHeaders] = useState([]);\n  const [fields, setFields] = useState([]);\n  const [btn, setBtn] = useState([]);\n  let csvFields = \"\";\n  //const fields = ['title','description','release_date','genre'];\n\n  const fileReader = new FileReader();\n  const handleOnChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    if (file) {\n      setFields(['title', 'description', 'release_date', 'genre']);\n      Papa.parse(file, {\n        complete: results => {\n          // Assuming the first row contains headers\n          const headerRow = results.data[0];\n          console.log('Headers:', headerRow);\n          setHeaders(headerRow);\n          headers.map(header => csvFields += \"<option value={header}>{header}</option>\");\n        },\n        error: error => {\n          console.error('Error parsing CSV:', error);\n        }\n      });\n      setBtn(\"<tr><td></td><td><button onClick={handSend} >Upload</button></td></tr>\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"csvFileInput\",\n        accept: \".csv\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleOnSubmit(e);\n        },\n        children: \"Process CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-condensed\",\n        children: [fields.map(field => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: field,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), csvFields]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)), btn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Upload, \"sjHh3Io3oA69RSVGrfUQu9i3mjs=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","Papa","jsxDEV","_jsxDEV","Upload","_s","file","setFile","headers","setHeaders","fields","setFields","btn","setBtn","csvFields","fileReader","FileReader","handleOnChange","e","target","files","handleOnSubmit","preventDefault","parse","complete","results","headerRow","data","console","log","map","header","error","style","textAlign","children","type","id","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","field","name","value","_c","$RefreshReg$"],"sources":["/var/www/html/enfin-test/frontend/src/pages/Upload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from '../config/axiosConfig';\nimport Papa from 'papaparse';\n\n\nfunction Upload() {\n    const [file, setFile] = useState();\n    const [headers, setHeaders] = useState([]);\n    const [fields, setFields] = useState([]);\n    const [btn, setBtn] = useState([]);\n    let csvFields = \"\";\n    //const fields = ['title','description','release_date','genre'];\n\n    const fileReader = new FileReader();\n\n    const handleOnChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const handleOnSubmit = async (e) => {\n        e.preventDefault();\n\n        if (file) {\n            setFields(['title','description','release_date','genre']);\n            Papa.parse(file, {\n                    complete: (results) => {\n                // Assuming the first row contains headers\n                    const headerRow = results.data[0];\n                    console.log('Headers:', headerRow);\n                    setHeaders(headerRow);\n                    headers.map((header) => (\n                        csvFields += \"<option value={header}>{header}</option>\"\n                    ))\n                },\n                error: (error) => {\n                    console.error('Error parsing CSV:', error);\n                }\n            });\n            setBtn(\"<tr><td></td><td><button onClick={handSend} >Upload</button></td></tr>\");\n        }\n    };\n\n    return (\n        <div style={{ textAlign: \"center\" }}>\n            <form>\n                <input\n                    type={\"file\"}\n                    id={\"csvFileInput\"}\n                    accept={\".csv\"}\n                    onChange={handleOnChange}\n                />\n\n                <button\n                    onClick={(e) => {\n                        handleOnSubmit(e);\n                    }}\n                >\n                    Process CSV\n                </button>\n            </form>\n\n            <div className=\"\">\n                <table className=\"table table-striped table-condensed\">\n                { fields.map((field) => (\n                    <tr>\n                        <td>{field}</td>\n                        <td>\n                            <select name={field}>\n                                <option value=\"\">Select</option>\n                                {csvFields}\n                            </select>\n                        </td>\n                    </tr> \n                ))}\n                {btn}\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default Upload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}