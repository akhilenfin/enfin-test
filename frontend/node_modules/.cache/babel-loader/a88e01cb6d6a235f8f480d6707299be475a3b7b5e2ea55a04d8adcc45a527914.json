{"ast":null,"code":"var _jsxFileName = \"/var/www/html/enfin-test/frontend/src/pages/CsvProcessor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CsvSelect from './CsvSelect';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CsvProcessor = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [fields, setFields] = useState([]);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (options) {\n      setFields(['title', 'description', 'release_date', 'genre']);\n    }\n  }, [options]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => {\n          setOptions(results.meta.fields);\n          setError(null);\n        },\n        error: err => {\n          setError(err.message);\n        }\n      });\n    }\n  };\n  const handleCsvUpload = () => {};\n  const hsndleSelectChange = (key, e) => {\n    console.log(key, e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CSV Header Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Headers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [fields.map(field => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: field,\n              id: field,\n              onChange: hsndleSelectChange.bind(null, field),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCsvUpload,\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CsvProcessor, \"W9OQGuaMyjaKOAVKEXAx8vH0spI=\");\n_c = CsvProcessor;\nexport default CsvProcessor;\nvar _c;\n$RefreshReg$(_c, \"CsvProcessor\");","map":{"version":3,"names":["React","useState","useEffect","CsvSelect","Papa","jsxDEV","_jsxDEV","CsvProcessor","_s","error","setError","fields","setFields","options","setOptions","handleFileUpload","event","file","target","files","parse","header","skipEmptyLines","complete","results","meta","err","message","handleCsvUpload","hsndleSelectChange","key","e","console","log","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","color","length","map","option","index","field","name","id","bind","onClick","_c","$RefreshReg$"],"sources":["/var/www/html/enfin-test/frontend/src/pages/CsvProcessor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CsvSelect from './CsvSelect';\nimport Papa from 'papaparse';\n\nconst CsvProcessor = () => {\n  const [error, setError] = useState(null);\n  const [fields, setFields] = useState([]);\n  const [options, setOptions] = useState([]);\n  \n  useEffect(() => {\n    if(options){\n        setFields(['title', 'description', 'release_date', 'genre']);\n    }\n  },[options]);\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: (results) => {\n          setOptions(results.meta.fields);\n          setError(null);\n        },\n        error: (err) => {\n          setError(err.message);\n        },\n      });\n    }\n  };\n\n  const handleCsvUpload = () => {\n\n  };\n\n\n  const hsndleSelectChange = (key, e) => {\nconsole.log(key, e.target.value)\n  };\n\n  return (\n    <div>\n      <h1>CSV Header Processor</h1>\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n      {options.length > 0 && (\n        <div>\n          <h2>Headers</h2>\n          <ul>\n            {options.map((option, index) => (\n              <li key={index}>{option}</li>\n            ))}\n          </ul>\n          <table>\n          {fields.map(field =>(\n            <tr>\n                <td>{field}</td>\n                <td>\n                    {/* <CsvSelect options={options}/> */}\n                    <select name={field} id={field} onChange={hsndleSelectChange.bind(null, field)}>\n                        <option value=\"\">-- Select --</option>\n                        {options.map((option) => (\n                            <option value={option}>\n                                {option}\n                            </option>\n                        ))}\n                    </select>\n                </td>\n            </tr>\n          ))}\n            <tr>\n                <td></td>\n                <td><button onClick={handleCsvUpload}>Upload</button></td>\n            </tr>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CsvProcessor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}